install a lower pythin version like 3.10

create or replace TABLE THE_SKY.SKY_DATA.COUNTRIES (
	COUNTRY_CODE VARCHAR(30) NOT NULL,
	NAME VARCHAR(225),
	CONTINENT VARCHAR(30),
	WIKIPEDIA_LINK VARCHAR(225),
	KEYWORDS VARCHAR(225),
	primary key (COUNTRY_CODE)
);
create or replace TABLE THE_SKY.SKY_DATA.REGIONS (
	REGION_CODE VARCHAR(30) NOT NULL,
	LOCAL_CODE VARCHAR(30),
	NAME VARCHAR(225),
	CONTINENT VARCHAR(30),
	ISO_COUNTRY VARCHAR(30),
	WIKIPEDIA_LINK VARCHAR(225),
	KEYWORDS VARCHAR(225),
	primary key (REGION_CODE),
	foreign key (ISO_COUNTRY) references THE_SKY.SKY_DATA.COUNTRIES(COUNTRY_CODE)
);
create or replace TABLE THE_SKY.SKY_DATA.AIRPORTS (
	AIRPORT_ID INTEGER NOT NULL,
	IDENT VARCHAR(30),
	TYPE VARCHAR(30),
	NAME VARCHAR(225),
	LATITUDE_DEG FLOAT,
	LONGITUDE_DEG FLOAT,
	ELEVATION_FT INTEGER,
	CONTINENT VARCHAR(30),
	ISO_COUNTRY VARCHAR(30),
	ISO_REGION VARCHAR(30),
	MUNICIPALITY VARCHAR(225),
	SCHEDULED_SERVICE BOOLEAN,
	GPS_CODE VARCHAR(30),
	IATA_CODE VARCHAR(30),
	LOCAL_CODE VARCHAR(30),
	HOME_LINK VARCHAR(225),
	WIKIPEDIA_LINK VARCHAR(225),
	KEYWORDS VARCHAR(1000),
	primary key (AIRPORT_ID),
	foreign key (ISO_COUNTRY) references THE_SKY.SKY_DATA.COUNTRIES(COUNTRY_CODE),
	foreign key (ISO_REGION) references THE_SKY.SKY_DATA.REGIONS(REGION_CODE)
);

create or replace TABLE THE_SKY.SKY_DATA.AIRPORT_FREQUENCIES (
	FREQUENCIES_ID INTEGER NOT NULL,
	AIRPORT_REF INTEGER,
	AIRPORT_IDENT VARCHAR(30),
	TYPE VARCHAR(30),
	DESCRIPTION VARCHAR(225),
	FREQUENCY_MHZ INTEGER,
	primary key (FREQUENCIES_ID),
	foreign key (AIRPORT_REF) references THE_SKY.SKY_DATA.AIRPORTS(AIRPORT_ID)
);

create or replace TABLE THE_SKY.SKY_DATA.NAVAIDS (
	NAVAIDS_ID INTEGER NOT NULL,
    FILENAME VARCHAR(60),
	IDENT VARCHAR(30),
	NAME VARCHAR(30),
	TYPE VARCHAR(30),
    FREQUENCY_KHZ DECIMAL(6,1),
	LATITUDE_DEG FLOAT,
	LONGITUDE_DEG FLOAT,
	ELEVATION_FT INTEGER,
	ISO_COUNTRY VARCHAR(30),
	dme_frequency_khz DECIMAL(6,1),
    dme_channel VARCHAR(30),
    dme_latitude_deg FLOAT,
    dme_longitude_deg FLOAT,
    dme_elevation_ft INTEGER,
    slaved_variation_deg FLOAT,
    magnetic_variation_deg FLOAT,
    usageType VARCHAR(30),
    power VARCHAR(30),
    associated_airport VARCHAR(30), 
    
    
	primary key (NAVAIDS_ID),
	foreign key (ISO_COUNTRY) references THE_SKY.SKY_DATA.COUNTRIES(COUNTRY_CODE)
);

create or replace TABLE THE_SKY.SKY_DATA.RUNWAYS (
	RUNWAYS_ID INTEGER NOT NULL,
	AIRPORT_REF INTEGER,
	AIRPORT_IDENT VARCHAR(30),
	LENGTH_FT INTEGER,
	WIDTH_FT INTEGER,
	SURFACE VARCHAR(30),
	LIGHTED BOOLEAN,
	CLOSED BOOLEAN,
	LE_IDENT VARCHAR(30),
	LE_LATITUDE_DEG FLOAT,
	LE_LONGITUDE_DEG FLOAT,
	LE_ELEVATION_FT INTEGER,
	LE_HEADING_DEG INTEGER,
	LE_DISPLACED_THRESHOLD_FT INTEGER,
	HE_IDENT VARCHAR(30),
	HE_LATITUDE_DEG FLOAT,
	HE_LONGITUDE_DEG FLOAT,
	HE_ELEVATION_FT INTEGER,
	HE_HEADING_DEG INTEGER,
	HE_DISPLACED_THRESHOLD_FT INTEGER,
	primary key (RUNWAYS_ID),
	foreign key (AIRPORT_REF) references THE_SKY.SKY_DATA.AIRPORTS(AIRPORT_ID)
);

UPDATE STAGING.AIR_STAGING.COUNTRIES SET code = COALESCE(code, 'NA');
UPDATE STAGING.AIR_STAGING.COUNTRIES SET continent = COALESCE(continent, 'NA');
UPDATE STAGING.AIR_STAGING.REGIONS SET iso_country = COALESCE(iso_country, 'NA');
UPDATE STAGING.AIR_STAGING.REGIONS SET continent = COALESCE(continent, 'NA');
UPDATE STAGING.AIR_STAGING.NAVAIDS SET iso_country = COALESCE(iso_country, 'NA');
UPDATE STAGING.AIR_STAGING.AIRPORTS SET continent = COALESCE(continent, 'NA');
UPDATE STAGING.AIR_STAGING.AIRPORTS SET iso_country = COALESCE(iso_country, 'NA');

